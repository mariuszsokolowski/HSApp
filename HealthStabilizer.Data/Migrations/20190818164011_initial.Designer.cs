// <auto-generated />
using System;
using HealthStabilizer.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HealthStabilizer.Data.Migrations
{
    [DbContext(typeof(DBContext))]
    [Migration("20190818164011_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("HealthStabilizer.Data.Entities.DailyIntake", b =>
                {
                    b.Property<int>("DailyIntakeId")
                        .ValueGeneratedOnAdd();

                    b.Property<float>("Calories");

                    b.Property<float>("Carbs");

                    b.Property<float>("Fat");

                    b.Property<int?>("ForUserId");

                    b.Property<int>("MineralId");

                    b.Property<string>("Name");

                    b.Property<float>("Protein");

                    b.Property<int>("VitaminId");

                    b.HasKey("DailyIntakeId");

                    b.HasIndex("MineralId");

                    b.HasIndex("VitaminId");

                    b.ToTable("DailyIntake");
                });

            modelBuilder.Entity("HealthStabilizer.Data.Entities.Food", b =>
                {
                    b.Property<int>("FoodId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Brand");

                    b.Property<string>("Description");

                    b.Property<int?>("ForUserId");

                    b.Property<int>("MineralId");

                    b.Property<string>("Name");

                    b.Property<float?>("PiecesInPackage");

                    b.Property<string>("QrCode");

                    b.Property<int>("VitaminId");

                    b.Property<float?>("WeightPerPiece");

                    b.HasKey("FoodId");

                    b.HasIndex("MineralId");

                    b.HasIndex("VitaminId");

                    b.ToTable("Food");
                });

            modelBuilder.Entity("HealthStabilizer.Data.Entities.Mineral", b =>
                {
                    b.Property<int>("MineralId")
                        .ValueGeneratedOnAdd();

                    b.Property<float>("Calcium");

                    b.Property<float>("Chlorine");

                    b.Property<float>("Chrome");

                    b.Property<float>("Copper");

                    b.Property<float>("Fluorine");

                    b.Property<float>("Iodine");

                    b.Property<float>("Iron");

                    b.Property<float>("Magnesium");

                    b.Property<float>("Molybdenum");

                    b.Property<float>("Nanganese");

                    b.Property<float>("Phosphorus");

                    b.Property<float>("Potassium");

                    b.Property<float>("Selenium");

                    b.Property<float>("Zinc");

                    b.HasKey("MineralId");

                    b.ToTable("Mineral");
                });

            modelBuilder.Entity("HealthStabilizer.Data.Entities.Vitamin", b =>
                {
                    b.Property<int>("VitaminId")
                        .ValueGeneratedOnAdd();

                    b.Property<float>("Biotin");

                    b.Property<float>("FolicAcid");

                    b.Property<float>("Niacin");

                    b.Property<float>("PanotehnicAcid");

                    b.Property<float>("Riboflavin");

                    b.Property<float>("Thiamine");

                    b.Property<float>("VitaminA");

                    b.Property<float>("VitaminB6");

                    b.Property<float>("VitaminC");

                    b.Property<float>("VitaminD");

                    b.Property<float>("VitaminE");

                    b.Property<float>("VitaminK");

                    b.HasKey("VitaminId");

                    b.ToTable("Vitamin");
                });

            modelBuilder.Entity("HealthStabilizer.Data.Entities.DailyIntake", b =>
                {
                    b.HasOne("HealthStabilizer.Data.Entities.Mineral", "Mineral")
                        .WithMany()
                        .HasForeignKey("MineralId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("HealthStabilizer.Data.Entities.Vitamin", "Vitamin")
                        .WithMany()
                        .HasForeignKey("VitaminId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HealthStabilizer.Data.Entities.Food", b =>
                {
                    b.HasOne("HealthStabilizer.Data.Entities.Mineral", "Mineral")
                        .WithMany()
                        .HasForeignKey("MineralId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("HealthStabilizer.Data.Entities.Vitamin", "Vitamin")
                        .WithMany()
                        .HasForeignKey("VitaminId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
